<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	 					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	  					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	  					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	  					http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-lazy-init="false" default-autowire="byName">  
	<description>配置文件</description>
	<aop:aspectj-autoproxy proxy-target-class="true" />  
    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${proxool.driver-class}" />
		<property name="driverUrl" value="${proxool.driver-url}" />
		<property name="user" value="${proxool.user}" />
		<property name="password" value="${proxool.password}" />
		<property name="alias" value="${proxool.alias}" />
		<property name="houseKeepingTestSql" value="${proxool.house-keeping-test-sql}"/>
		<property name="testBeforeUse" value="true"/>
		<property name="testAfterUse" value="true"/>
		<property name="maximumConnectionCount" value="${proxool.maximum-connection-count}" />
		<property name="minimumConnectionCount" value="${proxool.minimum-connection-count}" />
		<property name="delegateProperties"
			value="characterEncoding=${proxool.characterEncoding}" />
		<property name="simultaneousBuildThrottle" value="${proxool.simultaneousBuildThrottle}" />
		<property name="prototypeCount" value="${proxool.prototype-count}" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
			    <value>cn.disruptive.web.po</value>
			    <value>cn.disruptive.security.po</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>classpath:hibernate.properties</value>
		</property>
	</bean>
	<!-- 事务配置 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 使Spring关注Annotation -->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="cn.disruptive">
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache"/>
	</bean>
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">    
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>
	<bean id="SpringConfigTool" class="cn.disruptive.common.util.SpringConfigTool"></bean>
<!-- 	<bean id="securityAdvice" class="cn.disruptive.security.SecurityAdvice" />
	<aop:config proxy-target-class="true">
		<aop:pointcut id="operatePoint"
			expression="@annotation(cn.disruptive.security.Security)" />
		<aop:advisor pointcut-ref="operatePoint" id="sAdvice"
			advice-ref="securityAdvice" />
	</aop:config> -->
</beans>